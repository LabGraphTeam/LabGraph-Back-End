services:
  mariadb:
    image: mariadb:11.2
    restart: unless-stopped
    environment:
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - ${DB_DOCKER_PORT}
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - quality-net
    profiles:
      - prod

  app-prod:
    container_name: quality-lab-pro-back-end
    restart: unless-stopped
    image: leonardomeireles55/quality-lab-pro-back-end:latest
    build:
      context: .
      dockerfile: ./.docker/Dockerfile.prod
    working_dir: /usr/src/app
    ports:
      - ${SERVER_LOCAL_PORT}:${SERVER_DOCKER_PORT}
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVER_PORT: ${SERVER_DOCKER_PORT}
      API_SECURITY_TOKEN_SECRET: ${API_SECURITY_TOKEN_SECRET}
      API_SECURITY_ISSUER: ${API_SECURITY_ISSUER}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      EMAIL_TO_SEND_LIST: ${EMAIL_TO_SEND_LIST}
    networks:
      - quality-net
    profiles:
      - prod

  nginx:
    restart: always
    image: nginx:latest
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/ssl/lab-spec.systems:/etc/ssl/lab-spec.systems:ro
      - ./nginx:/etc/nginx:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    networks:
      - quality-net
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - app-prod
    profiles:
      - prod


  #---------------------
  # Development services
  #---------------------

  mariadb-dev:
    container_name: mariadb-dev
    image: mariadb:11.2
    restart: "no"
    environment:
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${DB_LOCAL_PORT}:${DB_DOCKER_PORT}"
    volumes:
      - mysql-volume-dev:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - quality-net-dev
    profiles:
      - dev

  app-dev:
    container_name: quality-lab-pro-back-end-dev
    restart: "no"
    build:
      context: .
      dockerfile: .docker/Dockerfile.dev
    working_dir: /usr/src/app
    env_file: ./.env
    ports:
      - ${SERVER_LOCAL_PORT}:${SERVER_DOCKER_PORT}
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb-dev:3306/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVER_PORT: ${SERVER_DOCKER_PORT}
      API_SECURITY_TOKEN_SECRET: ${API_SECURITY_TOKEN_SECRET}
      API_SECURITY_ISSUER: ${API_SECURITY_ISSUER}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      EMAIL_TO_SEND_LIST: ${EMAIL_TO_SEND_LIST}
    stdin_open: true
    tty: true
    profiles:
      - dev
    volumes:
      - ./:/usr/src/app
      - ~/.m2:/root/.m2
    networks:
      - quality-net-dev

#----------------------------------------------
# Test Services

  db-test:
    container_name: mariadb-test
    restart: "no"
    image: mariadb:11.2
    environment:
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - ${DB_DOCKER_PORT}
    volumes:
      - mysql-volume-dev:/var/lib/mysql
    networks:
      - quality-net-dev
    profiles:
      - test

  app-test:
    container_name: quality-lab-pro-back-end-test
    build:
      context: .
      dockerfile: .docker/Dockerfile.test
    working_dir: /usr/src/app
    restart: "no"
    env_file: ./.env
    ports:
      - ${SERVER_DOCKER_PORT}
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb-test:3306/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVER_PORT: ${SERVER_DOCKER_PORT}
      API_SECURITY_TOKEN_SECRET: ${API_SECURITY_TOKEN_SECRET}
      API_SECURITY_ISSUER: ${API_SECURITY_ISSUER}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      EMAIL_TO_SEND_LIST: ${EMAIL_TO_SEND_LIST}
    stdin_open: true
    tty: true
    profiles:
      - test
    volumes:
      - ./:/usr/src/app
      - ~/.m2:/root/.m2
    networks:
      - quality-net-dev

    
#----------------------------------------------

networks:
  quality-net:
    name: quality-net
    external: true
    driver: bridge

  quality-net-dev:
    name: quality-net-dev
    external: true
    driver: bridge

#----------------------------------------------

# Volumes
volumes:
  mysql-volume:
  mysql-volume-dev:

#----------------------------------------------